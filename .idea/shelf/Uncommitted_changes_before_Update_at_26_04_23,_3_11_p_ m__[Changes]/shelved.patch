Index: persistencia/src/test/java/co/edu/uniquindio/proyecto/ProductoTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto;\n\nimport co.edu.uniquindio.proyecto.entidades.Producto;\nimport co.edu.uniquindio.proyecto.entidades.Usuario;\nimport co.edu.uniquindio.proyecto.repositorios.ProductoRepo;\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;\nimport org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;\nimport org.springframework.test.context.jdbc.Sql;\n\nimport java.time.LocalDateTime;\nimport java.util.Date;\nimport java.util.List;\n\n\n@DataJpaTest\n@AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE)\npublic class ProductoTest {\n    @Autowired\n    private ProductoRepo productoRepo;\n\n\n    //------------------------------CONSULTAS----------------------------------------------------------\n    @Test\n    @Sql(\"classpath:usuarios.sql\")\n    public void listarProductos(){\n\n\n        List<Producto> misProductos = productoRepo.findAll();\n        System.out.println(misProductos);\n    }\n\n    @Test\n    @Sql(\"classpath:usuarios.sql\")\n    public void buscarNombreDeVendedorPorCodigo(){\n        String nombre = productoRepo.obtenerNombreDelVendedor(\"1\");\n        System.out.println(nombre);\n    }\n\n    @Test\n    @Sql(\"classpath:usuarios.sql\")\n    public void listarProductosYComentarios(){\n\n\n        List<Object[]> respuesta= productoRepo.listarUsuariosYProductos();\n\n        for (Object[] objeto:respuesta){\n            System.out.println(objeto[0]+\"-----\"+objeto[1]);\n        }\n\n    }\n\n    @Test\n    @Sql(\"classpath:usuarios.sql\")\n    public void listarUsuariosQueHanComentadoUnProducto(){\n        List<Usuario> respuesta= productoRepo.listarUsuariosQueComentaronProducto(\"1\");\n        respuesta.forEach(u -> System.out.println(u));\n    }\n\n    @Test\n    @Sql(\"classpath:usuarios.sql\")\n    public void listarProductosValidos(){\n        System.out.println(new Date()+\"----\"+\"Date\");\n        System.out.println(LocalDateTime.now()+\"----\"+\"LocalDateTime\");\n\n        //List<ProductoValido> respuesta= productoRepo.listarProductosValidos(LocalDateTime.now());\n       // respuesta.forEach(u -> System.out.println(u));\n    }\n\n\n    @Test\n    @Sql(\"classpath:usuarios.sql\")\n    public void listarProductosConMasComentarios() {\n        List<Object[]> resultado = productoRepo.listarProductosConMasComentarios();\n        for (Object[] row : resultado) {\n            String productoId = (String) row[0];\n            String nombreProducto = (String) row[1];\n            Long cantidadComentarios = (Long) row[2];\n            System.out.println(\"Producto con el codigo: \" + productoId + \" - Nombre: \" + nombreProducto + \" - Cantidad de Comentarios: \" + cantidadComentarios);\n        }\n    }\n\n    @Test\n    @Sql(\"classpath:usuarios.sql\")\n    public void listarProductosMasAgregadosFavoritos() {\n        List<Object[]> resultado = productoRepo.listarProductosMasAgregadosFavoritos();\n        Assertions.assertNotNull(resultado);\n        Assertions.assertFalse(resultado.isEmpty());\n        for (Object[] row : resultado) {\n            String productoId = (String) row[0];\n            String nombreProducto = (String) row[1];\n            Long cantidadFavoritos = (Long) row[2];\n            System.out.println(\"Producto con el código: \" + productoId + \" - Nombre: \" + nombreProducto + \" - Cantidad de Favoritos: \" + cantidadFavoritos);\n        }\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/persistencia/src/test/java/co/edu/uniquindio/proyecto/ProductoTest.java b/persistencia/src/test/java/co/edu/uniquindio/proyecto/ProductoTest.java
--- a/persistencia/src/test/java/co/edu/uniquindio/proyecto/ProductoTest.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/persistencia/src/test/java/co/edu/uniquindio/proyecto/ProductoTest.java	(date 1682539866954)
@@ -13,6 +13,7 @@
 import java.time.LocalDateTime;
 import java.util.Date;
 import java.util.List;
+import java.util.Optional;
 
 
 @DataJpaTest
@@ -96,5 +97,28 @@
         }
     }
 
+    @Test
+    @Sql("classpath:usuarios.sql")
+    public void obtenerPropietarioProductoTest() {
+
+        Optional<Usuario> u=productoRepo.obtenerPropietarioProducto("1");
+        System.out.println(u.get().getNombre());
+
+    }
+
+    /**
+     * @Autor Escanor
+     * guarda un producto favoritos de un usuario específicos
+     */
+    @Test
+    @Sql("classpath:usuarios.sql")
+    public void guardarProductoEnFavoritosTest() {
+
+
+
+    }
+
+
+
 
 }
\ No newline at end of file
Index: persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/UsuarioRepo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto.repositorios;\n\nimport co.edu.uniquindio.proyecto.entidades.Comentario;\nimport co.edu.uniquindio.proyecto.entidades.Producto;\nimport co.edu.uniquindio.proyecto.entidades.Usuario;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.Pageable;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.List;\nimport java.util.Objects;\nimport java.util.Optional;\n\n@Repository\npublic interface UsuarioRepo extends JpaRepository<Usuario,String> {\n\n//se definen todas las consultas para acceder a los datos\n\n//-----------------------------------Consultas propias-------------------------------------\n    //se pueden contruir consultas propias mediante el lenguaje JPQL como la siguiente\n    @Query(\"select u from Usuario u where u.nombre = :nombre\")\n    List<Usuario> obtenerUsuariosPorNombre(String nombre);\n\n    @Query(\"select u.misProductos from Usuario u where u.codigo = :codigo\")\n    List<Producto> obtenerProductosUsuarioPorCodigo(String codigo);\n\n\n    //seleccionar productos p de un usuario u combina las filas de para poder ver los productos\n    @Query(\"select p from Usuario  u join u.misProductos p where u.codigo = :codigo\")\n    List<Producto> obtenerProductosUsuarioPorCodigoj(String codigo);\n\n    @Query(\"select c from Usuario u join u.misComentarios c where u.codigo =:codigo\")\n    List<Comentario> obtenerComentarioDeUsuarioPorCodigo(String codigo);\n\n\n    //usamos IN cuando queremos mezclar un objeto con una lista de cosas\n    @Query(\"select p from Usuario  u, IN (u.productosFavoritos) p where u.email = :email\")\n    List<Producto> obtenerFavoritosPorCorreo(String email);\n\n    //se trae el email de el usuarios\n    //la respuesta a esto va a ser una lista de objetos\n    @Query(\"select u.email,p from Usuario u join u.misProductos p\")\n    List<Object[]> listarUsuariosYProductos();\n\n\n\n\n    //---------------------------------Consultas inferidas por SpringBoot----------------------------------------\n\n\n    //con inferencia de datos gracias a el framework de spring que es JPArepository\n    List<Usuario>findAllByNombreContains(String nombre);\n    List<Usuario>findAllByTelefono(String telefono);\n    Optional<Usuario> findByCedula(String cedula);\n    Optional<Usuario> findByEmail(String email);\n    Optional<Usuario> findByUsername(String username);\n    Optional<Usuario> findByEmailAndCodigo(String email,String password);\n\n    Optional<Usuario> findByUsernameAndPassword(String username,String password);\n\n\n\n    Page<Usuario> findAllBy(Pageable paginador);\n\n\n    @Query(\"select u from Usuario u where u.codigo = :codigo\")\n    Usuario obtenerUsuarioPorCodigo(String codigo);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/UsuarioRepo.java b/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/UsuarioRepo.java
--- a/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/UsuarioRepo.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/UsuarioRepo.java	(date 1682539381174)
@@ -23,6 +23,8 @@
     @Query("select u from Usuario u where u.nombre = :nombre")
     List<Usuario> obtenerUsuariosPorNombre(String nombre);
 
+
+
     @Query("select u.misProductos from Usuario u where u.codigo = :codigo")
     List<Producto> obtenerProductosUsuarioPorCodigo(String codigo);
 
@@ -31,6 +33,8 @@
     @Query("select p from Usuario  u join u.misProductos p where u.codigo = :codigo")
     List<Producto> obtenerProductosUsuarioPorCodigoj(String codigo);
 
+
+
     @Query("select c from Usuario u join u.misComentarios c where u.codigo =:codigo")
     List<Comentario> obtenerComentarioDeUsuarioPorCodigo(String codigo);
 
@@ -39,6 +43,11 @@
     @Query("select p from Usuario  u, IN (u.productosFavoritos) p where u.email = :email")
     List<Producto> obtenerFavoritosPorCorreo(String email);
 
+
+    //le da un nombre a la lista de productosFavoritos
+    @Query("select p from Usuario  u, IN (u.productosFavoritos) p where u.codigo = :codigo")
+    List<Producto> obtenerFavoritosPorCodigo(String email);
+
     //se trae el email de el usuarios
     //la respuesta a esto va a ser una lista de objetos
     @Query("select u.email,p from Usuario u join u.misProductos p")
@@ -54,6 +63,7 @@
     List<Usuario>findAllByNombreContains(String nombre);
     List<Usuario>findAllByTelefono(String telefono);
     Optional<Usuario> findByCedula(String cedula);
+    Optional<Usuario> findByCodigo(String codigo);
     Optional<Usuario> findByEmail(String email);
     Optional<Usuario> findByUsername(String username);
     Optional<Usuario> findByEmailAndCodigo(String email,String password);
Index: negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicioImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto.servicios;\n\nimport co.edu.uniquindio.proyecto.entidades.Categoria;\nimport co.edu.uniquindio.proyecto.entidades.DetalleCompra;\nimport co.edu.uniquindio.proyecto.entidades.Producto;\nimport co.edu.uniquindio.proyecto.entidades.Usuario;\nimport co.edu.uniquindio.proyecto.repositorios.ProductoRepo;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.Optional;\n\n@Service\npublic class ProductoServicioImpl implements ProductoServicio{\n\n    private final ProductoRepo productoRepo;\n\n    public ProductoServicioImpl(ProductoRepo productoRepo) {\n        this.productoRepo = productoRepo;\n    }\n\n    @Override\n    public Producto publicarProducto(Producto p) throws Exception {\n\n        try {\n            return productoRepo.save(p);\n        }catch (Exception e){\n            throw new Exception(e.getMessage());\n        }\n\n    }\n\n    @Override\n    public void actualizarProducto(Producto p) throws Exception {\n\n    }\n\n    @Override\n    public void eliminarProducto(String codigo) throws Exception {\n        Optional<Producto> producto = productoRepo.findById(codigo);\n\n       if (producto.isEmpty()){\n           throw new Exception(\"No existe ningun producto con ese codigo\");\n       }\n\n       productoRepo.deleteById(codigo);\n    }\n\n    @Override\n    public Producto obtenerProducto(String codigo) throws Exception {\n        return productoRepo.findById(codigo).orElseThrow(()-> new Exception(\"el codigo del producto no es valido\") );\n    }\n\n    @Override\n    public List<Producto> listarProductosPorCategoria(Categoria categoria) {\n        return null;\n    }\n\n    @Override\n    public void comentarProducto(String mensaje, Usuario usuario, Producto producto) throws Exception {\n\n    }\n\n    @Override\n    public void guardarProductoEnFavoritos(Producto producto, Usuario usuario) throws Exception {\n\n    }\n\n    @Override\n    public void eliminarProductofavorito(Producto producto, Usuario usuario) throws Exception {\n\n    }\n\n    @Override\n    public void comprarProductos(DetalleCompra detalleCompra, Producto producto) {\n\n    }\n\n    @Override\n    public List<Producto> buscarProducto(String nombre, String[] producto) {\n        return null;\n    }\n\n    @Override\n    public List<Producto> listarProductos(String codigoUsuario) throws Exception {\n        return null;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicioImpl.java b/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicioImpl.java
--- a/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicioImpl.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicioImpl.java	(date 1682539381150)
@@ -1,13 +1,13 @@
 package co.edu.uniquindio.proyecto.servicios;
 
-import co.edu.uniquindio.proyecto.entidades.Categoria;
-import co.edu.uniquindio.proyecto.entidades.DetalleCompra;
-import co.edu.uniquindio.proyecto.entidades.Producto;
-import co.edu.uniquindio.proyecto.entidades.Usuario;
+import co.edu.uniquindio.proyecto.entidades.*;
+import co.edu.uniquindio.proyecto.repositorios.ComentarioRepo;
 import co.edu.uniquindio.proyecto.repositorios.ProductoRepo;
+import co.edu.uniquindio.proyecto.repositorios.UsuarioRepo;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
+import java.time.LocalDate;
 import java.util.List;
 import java.util.Optional;
 
@@ -16,18 +16,44 @@
 
     private final ProductoRepo productoRepo;
 
-    public ProductoServicioImpl(ProductoRepo productoRepo) {
+    private final UsuarioRepo usuarioRepo;
+    private final ComentarioRepo comentarioRepo;
+
+    public ProductoServicioImpl(ProductoRepo productoRepo,ComentarioRepo comentarioRepo,UsuarioRepo usuarioRepo) {
         this.productoRepo = productoRepo;
+        this.comentarioRepo=comentarioRepo;
+        this.usuarioRepo=usuarioRepo;
     }
 
     @Override
     public Producto publicarProducto(Producto p) throws Exception {
+        Optional<Producto> buscado= productoRepo.findById(p.getCodigo());
+        if (buscado.isPresent()){
+            throw new Exception("El codigo del producto ya existe");
+        }
 
-        try {
-            return productoRepo.save(p);
-        }catch (Exception e){
-            throw new Exception(e.getMessage());
+        return productoRepo.save(p);
+    }
+
+    @Override
+    public Producto publicarProductoVender(Producto p, Usuario u) throws Exception {
+
+        Optional<Producto> buscado= productoRepo.findById(p.getCodigo());
+        if (buscado.isPresent()){
+            throw new Exception("El codigo del producto ya existe");
         }
+
+        p.setMiUsuario(u);
+        return productoRepo.save(p);
+
+
+
+    }
+
+    @Override
+    public Producto registrarProducto(Producto p) throws Exception {
+
+        return null;
 
     }
 
@@ -59,12 +85,32 @@
 
     @Override
     public void comentarProducto(String mensaje, Usuario usuario, Producto producto) throws Exception {
+        LocalDate ld = LocalDate.now();
+        Comentario comentario=new Comentario("1",mensaje,ld);
+        comentario.setMiUsuario(usuario);
+        comentario.setMiProducto(producto);
+
+        comentarioRepo.save(comentario);
+
 
     }
 
     @Override
     public void guardarProductoEnFavoritos(Producto producto, Usuario usuario) throws Exception {
 
+
+        try {
+
+        }catch (Exception e){
+            List<Producto> favoritos = usuarioRepo.obtenerFavoritosPorCodigo(usuario.getCodigo());
+            favoritos.add(producto);
+            usuarioRepo.save(usuario);
+        }
+        usuario.getProductosFavoritos().add(producto);
+        productoRepo.save(producto);
+
+
+
     }
 
     @Override
Index: negocio/src/test/java/co/edu/uniquindio/proyecto/test/UsuarioServicioTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto.test;\n\nimport co.edu.uniquindio.proyecto.NegocioApplication;\nimport co.edu.uniquindio.proyecto.entidades.Usuario;\nimport co.edu.uniquindio.proyecto.servicios.UsuarioServicio;\n\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport java.util.List;\n\n\n//se define la clase que se va a probar\n//este sirve para que las pruebas que ajecutemos aqui no afecten a la base de datos real\n@SpringBootTest(classes = NegocioApplication.class)\n@Transactional\npublic class UsuarioServicioTest {\n    //inicializa el usuarioServicio\n    @Autowired\n    private UsuarioServicio usuarioServicio;\n\n    @Test\n    public void registrarusuarioTest(){\n     Usuario u = new Usuario(\"905\",\"mario contreras\",\"1023452133\",\"mario@gmail.com\",\"28#14-09\",\"3216758976\",\"unimario\",\"Heropro.12\");\n        try {\n            Usuario registrado = usuarioServicio.registrarUsuario(u);\n            Assertions.assertNotNull(registrado);\n        } catch (Exception e) {\n            //throw new RuntimeException(e);\n            Assertions.assertTrue(false);\n        }\n    }\n\n    @Test\n    public void aactualizarUsuarioTest(){\n        Usuario u =  new Usuario(\"909\",\"mario contreras\",\"1023452133\",\"mario@gmail.com\",\"28#14-09\",\"3216758976\",\"unimario\",\"Heropro.12\");\n        try {\n            Usuario registrado = usuarioServicio.actualizarUsuario(u);\n            Assertions.assertNotNull(registrado);\n        } catch (Exception e) {\n            //throw new RuntimeException(e);\n            Assertions.assertTrue(false);\n        }\n    }\n\n    @Test\n    public void eliminarUsuarioTest(){\n        Usuario u =  new Usuario(\"904\",\"mario contreras\",\"1023452133\",\"mario@gmail.com\",\"28#14-09\",\"3216758976\",\"unimario\",\"Heropro.12\");\n        try {\n            //usuarioServicio.registrarUsuario(u);\n            usuarioServicio.eliminarUsuario(\"904\");\n        } catch (Exception e) {\n            //throw new RuntimeException(e);\n            //sirve para que no salga la excepcion y simplemente la prueba se muestre como no aprobada\n            Assertions.assertTrue(false);\n        }\n    }\n\n    @Test\n    public void listarUsuariosTest(){\n        Usuario u = new Usuario(\"904\",\"mario contreras\",\"1023452133\",\"mario@gmail.com\",\"28#14-09\",\"3216758976\",null,\"Heropro.12\");\n        try {\n            usuarioServicio.registrarUsuario(u);\n            List<Usuario> usuarios =usuarioServicio.listarUsuarios();\n            usuarios.forEach(us -> System.out.println(us));\n        } catch (Exception e) {\n            //throw new RuntimeException(e);\n            //sirve para que no salga la excepcion y simplemente la prueba se muestre como no aprobada\n            Assertions.assertTrue(false);\n        }\n    }\n\n    @Test\n    public void actualizarUsuarioTest() throws Exception {\n        // Crear un usuario existente en la base de datos\n        Usuario u =  new Usuario(\"904\",\"mario contreras\",\"1023452133\",\"mario@gmail.com\",\"28#14-09\",\"3216758976\",\"unimario\",\"Heropro.12\");\n        Usuario registrado = usuarioServicio.registrarUsuario(u);\n\n        // Modificar los datos del usuario\n        registrado.setNombre(\"Mario Modificado\");\n        registrado.setTelefono(\"9876543210\");\n\n        try {\n            Usuario actualizado = usuarioServicio.actualizarUsuario(registrado); // Llamada al método de actualización de usuario\n            Assertions.assertNotNull(actualizado);\n            Assertions.assertEquals(\"Mario Modificado\", actualizado.getNombre()); // Verificar que los datos se hayan actualizado correctamente\n            Assertions.assertEquals(\"9876543210\", actualizado.getTelefono());\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    /**\n     * Este metodo nos permite probar que el inicio de sesion este funcionando bien\n     * @autor Escanor\n     */\n    @Test\n    public void inicioSesionTest(){\n        Usuario u = new Usuario(\"904\",\"mario contreras\",\"1023452133\",\"mario@gmail.com\",\"28#14-09\",\"3216758976\",\"unimario\",\"Heropro.12\");\n        try {\n            usuarioServicio.registrarUsuario(u);\n            usuarioServicio.iniciarSesion(\"unimario\",\"Heropro.12\");\n\n\n        } catch (Exception e) {\n            //throw new RuntimeException(e);\n            //sirve para que no salga la excepcion y simplemente la prueba se muestre como no aprobada\n            Assertions.assertTrue(false, e.getMessage());\n        }\n    }\n\n    @Test\n    public void obtenerUsuarioTest(){\n        try {\n            Usuario u = usuarioServicio.obtenerUsuario(\"909\");\n            Assertions.assertNotNull(u);\n        } catch (Exception e) {\n            //throw new RuntimeException(e);\n            Assertions.assertTrue(false);\n        }\n    }\n\n\n\n\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/negocio/src/test/java/co/edu/uniquindio/proyecto/test/UsuarioServicioTest.java b/negocio/src/test/java/co/edu/uniquindio/proyecto/test/UsuarioServicioTest.java
--- a/negocio/src/test/java/co/edu/uniquindio/proyecto/test/UsuarioServicioTest.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/negocio/src/test/java/co/edu/uniquindio/proyecto/test/UsuarioServicioTest.java	(date 1682536743791)
@@ -24,9 +24,10 @@
 
     @Test
     public void registrarusuarioTest(){
-     Usuario u = new Usuario("905","mario contreras","1023452133","mario@gmail.com","28#14-09","3216758976","unimario","Heropro.12");
+     Usuario u = new Usuario("905","daniel","1023452133","mario@gmail.com","28#14-09","3216758976","unimario","Heropro.12");
         try {
             Usuario registrado = usuarioServicio.registrarUsuario(u);
+            System.out.println(registrado);
             Assertions.assertNotNull(registrado);
         } catch (Exception e) {
             //throw new RuntimeException(e);
@@ -51,7 +52,7 @@
         Usuario u =  new Usuario("904","mario contreras","1023452133","mario@gmail.com","28#14-09","3216758976","unimario","Heropro.12");
         try {
             //usuarioServicio.registrarUsuario(u);
-            usuarioServicio.eliminarUsuario("904");
+            usuarioServicio.eliminarUsuario("905");
         } catch (Exception e) {
             //throw new RuntimeException(e);
             //sirve para que no salga la excepcion y simplemente la prueba se muestre como no aprobada
Index: persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Usuario.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto.entidades;\n\nimport lombok.*;\nimport org.hibernate.validator.constraints.Length;\n\nimport javax.persistence.*;\nimport javax.validation.constraints.Email;\nimport javax.validation.constraints.NotBlank;\nimport java.io.Serializable;\nimport java.util.List;\n\n@Entity\n@Getter\n@Setter\n@NoArgsConstructor\n@ToString(callSuper = true)\npublic class Usuario extends Persona implements Serializable {\n\n    @NotBlank(message = \"el campo de usuario no puede ser nulo\")\n    @Column(nullable = false,length = 20,unique = true)\n    private String username;\n\n    @Column(nullable = false,length = 20)\n    private String password;\n\n     @ToString.Exclude\n     @OneToMany(mappedBy = \"miUsuario\")\n     private List<Producto> misProductos ;\n     //entidad inversa\n\n\n     //entidad propietaria entre usuario producto\n    @ManyToMany\n     private List<Producto> productosFavoritos;\n\n     @ToString.Exclude\n     @OneToMany(mappedBy = \"miUsuario\")\n     private List<Comentario> misComentarios;\n\n\n     @ToString.Exclude\n     @OneToMany(mappedBy = \"miUsuario\")\n     private List<Compra> misCompras;\n\n    public Usuario(String codigo, @Length(max = 150) String nombre, String cedula, @Email String email, String direccion, String telefono, String username, String password) {\n        super(codigo, nombre, cedula, email, direccion, telefono);\n        this.username = username;\n        this.password = password;\n\n    }\n\n    //entidad inversa\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Usuario.java b/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Usuario.java
--- a/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Usuario.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Usuario.java	(date 1682491500686)
@@ -16,7 +16,7 @@
 @ToString(callSuper = true)
 public class Usuario extends Persona implements Serializable {
 
-    @NotBlank(message = "el campo de usuario no puede ser nulo")
+
     @Column(nullable = false,length = 20,unique = true)
     private String username;
 
Index: persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/ProductoRepo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto.repositorios;\n\nimport co.edu.uniquindio.proyecto.DTO.ProductoValido;\nimport co.edu.uniquindio.proyecto.entidades.Imagen;\nimport co.edu.uniquindio.proyecto.entidades.Producto;\nimport co.edu.uniquindio.proyecto.entidades.SubCategoria;\nimport co.edu.uniquindio.proyecto.entidades.Usuario;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.stereotype.Repository;\n\nimport java.time.LocalDateTime;\nimport java.util.List;\n\n@Repository\npublic interface ProductoRepo extends JpaRepository<Producto,String>{\n\n    @Query(\"select p.miUsuario.nombre from Producto p where p.codigo = :codigo\")\n    String obtenerNombreDelVendedor(String codigo);\n\n\n    //left join nos muestra la relacion de el usuario y los comentario para saber que usuario tiene comentario o que ususario tiene los comentarios en null\n    @Query(\"select p.nombre,c.mensaje from Producto p left join p.miComentario c\")\n    List<Object[]> listarUsuariosYProductos();\n\n\n    //usuarios que han comentado un producto especifico\n    //de un producto se trae la informacion del usuario pero del usuario necesita\n\n    @Query(\"select p.miUsuario from Producto p  join p.miComentario c where p.codigo = :codigo \")\n    List<Usuario> listarUsuariosQueComentaronProducto(String codigo);\n\n\n    @Query(\"SELECT p.codigo, p.nombre, COUNT(c.mensaje) FROM Producto p LEFT JOIN p.miComentario c GROUP BY p.codigo, p.nombre ORDER BY COUNT(c.mensaje) DESC\")\n    List<Object[]> listarProductosConMasComentarios();\n\n\n\n    @Query(value = \"SELECT p.codigo, p.nombre, COUNT(f.codigo) AS cantidadFavoritos \" +\n            \"FROM Producto p \" +\n            \"LEFT JOIN p.usuariosFavoritos f \" +\n            \"GROUP BY p.codigo, p.nombre \" +\n            \"ORDER BY cantidadFavoritos DESC\")\n    List<Object[]> listarProductosMasAgregadosFavoritos();\n\n    //listarProductosValisdos\n    //@Query(\"select new co.edu.uniquindio.proyecto.DTO.ProductoValido(p.nombre,p.descripcion,p.precio) from Producto p where p.fechaLimite < :fechaActual\")\n   // List<ProductoValido> listarProductosValidos(LocalDateTime fechaActual);\n\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/ProductoRepo.java b/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/ProductoRepo.java
--- a/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/ProductoRepo.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/ProductoRepo.java	(date 1682495411031)
@@ -11,6 +11,8 @@
 
 import java.time.LocalDateTime;
 import java.util.List;
+import java.util.Objects;
+import java.util.Optional;
 
 @Repository
 public interface ProductoRepo extends JpaRepository<Producto,String>{
@@ -31,10 +33,14 @@
     List<Usuario> listarUsuariosQueComentaronProducto(String codigo);
 
 
+
+
     @Query("SELECT p.codigo, p.nombre, COUNT(c.mensaje) FROM Producto p LEFT JOIN p.miComentario c GROUP BY p.codigo, p.nombre ORDER BY COUNT(c.mensaje) DESC")
     List<Object[]> listarProductosConMasComentarios();
 
 
+    @Query("select p.miUsuario from Producto p where p.codigo = :codigo")
+    Optional<Usuario> obtenerPropietarioProducto(String codigo);
 
     @Query(value = "SELECT p.codigo, p.nombre, COUNT(f.codigo) AS cantidadFavoritos " +
             "FROM Producto p " +
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"bc8b336f-cb2d-4c7f-a277-02412142f29a\" name=\"Changes\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicioImpl.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/negocio/src/test/java/co/edu/uniquindio/proyecto/test/ProductoServicioTest.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicio.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicio.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicio.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicio.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicioImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicioImpl.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/negocio/src/test/java/co/edu/uniquindio/proyecto/test/UsuarioServicioTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/negocio/src/test/java/co/edu/uniquindio/proyecto/test/UsuarioServicioTest.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Producto.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Producto.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/UsuarioRepo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/UsuarioRepo.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/persistencia/src/main/resources/application.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/persistencia/src/main/resources/application.properties\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/persistencia/src/test/java/co/edu/uniquindio/proyecto/UsuarioTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/persistencia/src/test/java/co/edu/uniquindio/proyecto/UsuarioTest.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;history&quot;: [\n    {\n      &quot;state&quot;: &quot;OPEN&quot;,\n      &quot;author&quot;: &quot;Alejo-Aguirre&quot;\n    }\n  ],\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;author&quot;: &quot;Alejo-Aguirre&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">\n    <option name=\"selectedUrlAndAccountId\">\n      <UrlAndAccount>\n        <option name=\"accountId\" value=\"7fa61915-a7bb-4cd4-a6cc-d0573361c9e0\" />\n        <option name=\"url\" value=\"https://github.com/escanor904/Proyecto-uniMarket.git\" />\n      </UrlAndAccount>\n    </option>\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"importingSettings\">\n      <MavenImportingSettings>\n        <option name=\"workspaceImportEnabled\" value=\"true\" />\n      </MavenImportingSettings>\n    </option>\n  </component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2MRpYPi3iOwZC9GwmrhuwCS7lha\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RequestMappingsPanelOrder0\": \"0\",\n    \"RequestMappingsPanelOrder1\": \"1\",\n    \"RequestMappingsPanelWidth0\": \"75\",\n    \"RequestMappingsPanelWidth1\": \"75\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"TODO_SCOPE\": \"All Places\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"extract.method.default.visibility\": \"private\",\n    \"jdk.selected.JAVA_MODULE\": \"corretto-11\",\n    \"last_directory_selection\": \"/home/escanor/Documentos/workspaces-2023-1/default-inellej/uniMarket/negocio/src/main/java/co/edu/uniquindio/proyecto\",\n    \"last_opened_file_path\": \"/home/escanor/Documentos/workspaces-2023-1/default-inellej/uniMarket/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"project.structure.last.edited\": \"Modules\",\n    \"project.structure.proportion\": \"0.0\",\n    \"project.structure.side.proportion\": \"0.0\",\n    \"settings.editor.selected.configurable\": \"project.scopes\",\n    \"spring.configuration.checksum\": \"e8b48a4ec68ffad340e6d0a8f82c1366\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RunManager\" selected=\"JUnit.UsuarioServicioTest.listarUsuariosTest\">\n    <configuration name=\"ProductoServicioTest.obtenerProductoTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"negocio\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"co.edu.uniquindio.proyecto.test.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"co.edu.uniquindio.proyecto.test\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"co.edu.uniquindio.proyecto.test.ProductoServicioTest\" />\n      <option name=\"METHOD_NAME\" value=\"obtenerProductoTest\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"ProductoServicioTest.publicarProducto\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"negocio\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"co.edu.uniquindio.proyecto.test.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"co.edu.uniquindio.proyecto.test\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"co.edu.uniquindio.proyecto.test.ProductoServicioTest\" />\n      <option name=\"METHOD_NAME\" value=\"publicarProducto\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"UsuarioServicioTest.listarUsuariosTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"negocio\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"co.edu.uniquindio.proyecto.test.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"co.edu.uniquindio.proyecto.test\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"co.edu.uniquindio.proyecto.test.UsuarioServicioTest\" />\n      <option name=\"METHOD_NAME\" value=\"listarUsuariosTest\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"UsuarioServicioTest.obtenerUsuarioTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"negocio\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"co.edu.uniquindio.proyecto.test.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"co.edu.uniquindio.proyecto.test\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"co.edu.uniquindio.proyecto.test.UsuarioServicioTest\" />\n      <option name=\"METHOD_NAME\" value=\"obtenerUsuarioTest\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"PersistenciaApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"persistencia\" />\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"co.edu.uniquindio.proyecto.PersistenciaApplication\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"co.edu.uniquindio.proyecto.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"JUnit.UsuarioServicioTest.listarUsuariosTest\" />\n        <item itemvalue=\"JUnit.ProductoServicioTest.publicarProducto\" />\n        <item itemvalue=\"Spring Boot.PersistenciaApplication\" />\n        <item itemvalue=\"JUnit.ProductoServicioTest.obtenerProductoTest\" />\n        <item itemvalue=\"JUnit.UsuarioServicioTest.obtenerUsuarioTest\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"bc8b336f-cb2d-4c7f-a277-02412142f29a\" name=\"Changes\" comment=\"\" />\n      <created>1677740297387</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1677740297387</updated>\n      <workItem from=\"1677740298437\" duration=\"598000\" />\n      <workItem from=\"1677740906735\" duration=\"1005000\" />\n      <workItem from=\"1677741924828\" duration=\"569000\" />\n      <workItem from=\"1677742504228\" duration=\"2789000\" />\n      <workItem from=\"1677767259369\" duration=\"1122000\" />\n      <workItem from=\"1677947490782\" duration=\"3333000\" />\n      <workItem from=\"1677969352149\" duration=\"39000\" />\n      <workItem from=\"1678669845481\" duration=\"88000\" />\n      <workItem from=\"1678860631619\" duration=\"128000\" />\n      <workItem from=\"1678860770141\" duration=\"1890000\" />\n      <workItem from=\"1678912855698\" duration=\"25889000\" />\n      <workItem from=\"1678977247869\" duration=\"3119000\" />\n      <workItem from=\"1679540323614\" duration=\"100000\" />\n      <workItem from=\"1679548537527\" duration=\"60000\" />\n      <workItem from=\"1679551608967\" duration=\"4588000\" />\n      <workItem from=\"1679720155905\" duration=\"618000\" />\n      <workItem from=\"1679776400558\" duration=\"11654000\" />\n      <workItem from=\"1681163191565\" duration=\"649000\" />\n      <workItem from=\"1681711749600\" duration=\"3599000\" />\n      <workItem from=\"1681740983285\" duration=\"4105000\" />\n      <workItem from=\"1681790132049\" duration=\"15283000\" />\n      <workItem from=\"1681830720980\" duration=\"366000\" />\n      <workItem from=\"1681862935083\" duration=\"112000\" />\n      <workItem from=\"1681953389540\" duration=\"20651000\" />\n      <workItem from=\"1682057320626\" duration=\"3495000\" />\n      <workItem from=\"1682083017364\" duration=\"10000\" />\n      <workItem from=\"1682111614090\" duration=\"26196000\" />\n      <workItem from=\"1682465038807\" duration=\"16071000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/.idea/workspace.xml	(date 1682539867098)
@@ -5,17 +5,22 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="bc8b336f-cb2d-4c7f-a277-02412142f29a" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicioImpl.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/negocio/src/test/java/co/edu/uniquindio/proyecto/test/ProductoServicioTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/ComentarioRepo.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicio.java" beforeDir="false" afterPath="$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicio.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicioImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicioImpl.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicio.java" beforeDir="false" afterPath="$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicio.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicioImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicioImpl.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/negocio/src/test/java/co/edu/uniquindio/proyecto/test/ProductoServicioTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/negocio/src/test/java/co/edu/uniquindio/proyecto/test/ProductoServicioTest.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/negocio/src/test/java/co/edu/uniquindio/proyecto/test/UsuarioServicioTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/negocio/src/test/java/co/edu/uniquindio/proyecto/test/UsuarioServicioTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Comentario.java" beforeDir="false" afterPath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Comentario.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Persona.java" beforeDir="false" afterPath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Persona.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Producto.java" beforeDir="false" afterPath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Producto.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Usuario.java" beforeDir="false" afterPath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Usuario.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/ProductoRepo.java" beforeDir="false" afterPath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/ProductoRepo.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/UsuarioRepo.java" beforeDir="false" afterPath="$PROJECT_DIR$/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/UsuarioRepo.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/persistencia/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/persistencia/src/main/resources/application.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/persistencia/src/test/java/co/edu/uniquindio/proyecto/UsuarioTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/persistencia/src/test/java/co/edu/uniquindio/proyecto/UsuarioTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/persistencia/src/test/java/co/edu/uniquindio/proyecto/ProductoTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/persistencia/src/test/java/co/edu/uniquindio/proyecto/ProductoTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -26,8 +31,8 @@
     <option name="RECENT_TEMPLATES">
       <list>
         <option value="Enum" />
-        <option value="Interface" />
         <option value="Class" />
+        <option value="Interface" />
       </list>
     </option>
   </component>
@@ -75,36 +80,36 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RequestMappingsPanelOrder0": "0",
-    "RequestMappingsPanelOrder1": "1",
-    "RequestMappingsPanelWidth0": "75",
-    "RequestMappingsPanelWidth1": "75",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "TODO_SCOPE": "All Places",
-    "WebServerToolWindowFactoryState": "false",
-    "extract.method.default.visibility": "private",
-    "jdk.selected.JAVA_MODULE": "corretto-11",
-    "last_directory_selection": "/home/escanor/Documentos/workspaces-2023-1/default-inellej/uniMarket/negocio/src/main/java/co/edu/uniquindio/proyecto",
-    "last_opened_file_path": "/home/escanor/Documentos/workspaces-2023-1/default-inellej/uniMarket/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "project.structure.last.edited": "Modules",
-    "project.structure.proportion": "0.0",
-    "project.structure.side.proportion": "0.0",
-    "settings.editor.selected.configurable": "project.scopes",
-    "spring.configuration.checksum": "e8b48a4ec68ffad340e6d0a8f82c1366",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
+    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
+    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
+    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;TODO_SCOPE&quot;: &quot;All Places&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;extract.method.default.visibility&quot;: &quot;private&quot;,
+    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;corretto-11&quot;,
+    &quot;last_directory_selection&quot;: &quot;/home/escanor/Documentos/workspaces-2023-1/default-inellej/uniMarket/negocio/src/main/java/co/edu/uniquindio/proyecto&quot;,
+    &quot;last_opened_file_path&quot;: &quot;/home/escanor/Documentos/workspaces-2023-1/default-inellej/uniMarket/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;project.scopes&quot;,
+    &quot;spring.configuration.checksum&quot;: &quot;e8b48a4ec68ffad340e6d0a8f82c1366&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
-  <component name="RunManager" selected="JUnit.UsuarioServicioTest.listarUsuariosTest">
-    <configuration name="ProductoServicioTest.obtenerProductoTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+}</component>
+  <component name="RunManager" selected="JUnit.ProductoServicioTest.publicarProducto">
+    <configuration name="ProductoServicioTest.comentarProducto" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="negocio" />
       <extension name="coverage">
         <pattern>
@@ -114,13 +119,13 @@
       </extension>
       <option name="PACKAGE_NAME" value="co.edu.uniquindio.proyecto.test" />
       <option name="MAIN_CLASS_NAME" value="co.edu.uniquindio.proyecto.test.ProductoServicioTest" />
-      <option name="METHOD_NAME" value="obtenerProductoTest" />
+      <option name="METHOD_NAME" value="comentarProducto" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="ProductoServicioTest.publicarProducto" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="ProductoServicioTest.obtenerProductoTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="negocio" />
       <extension name="coverage">
         <pattern>
@@ -130,13 +135,13 @@
       </extension>
       <option name="PACKAGE_NAME" value="co.edu.uniquindio.proyecto.test" />
       <option name="MAIN_CLASS_NAME" value="co.edu.uniquindio.proyecto.test.ProductoServicioTest" />
-      <option name="METHOD_NAME" value="publicarProducto" />
+      <option name="METHOD_NAME" value="obtenerProductoTest" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="UsuarioServicioTest.listarUsuariosTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="ProductoServicioTest.publicarProducto" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="negocio" />
       <extension name="coverage">
         <pattern>
@@ -145,49 +150,52 @@
         </pattern>
       </extension>
       <option name="PACKAGE_NAME" value="co.edu.uniquindio.proyecto.test" />
-      <option name="MAIN_CLASS_NAME" value="co.edu.uniquindio.proyecto.test.UsuarioServicioTest" />
-      <option name="METHOD_NAME" value="listarUsuariosTest" />
+      <option name="MAIN_CLASS_NAME" value="co.edu.uniquindio.proyecto.test.ProductoServicioTest" />
+      <option name="METHOD_NAME" value="publicarProducto" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="UsuarioServicioTest.obtenerUsuarioTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
-      <module name="negocio" />
+    <configuration name="ProductoTest.obtenerPropietarioProductoTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="persistencia" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="co.edu.uniquindio.proyecto.test.*" />
+          <option name="PATTERN" value="co.edu.uniquindio.proyecto.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
-      <option name="PACKAGE_NAME" value="co.edu.uniquindio.proyecto.test" />
-      <option name="MAIN_CLASS_NAME" value="co.edu.uniquindio.proyecto.test.UsuarioServicioTest" />
-      <option name="METHOD_NAME" value="obtenerUsuarioTest" />
+      <option name="PACKAGE_NAME" value="co.edu.uniquindio.proyecto" />
+      <option name="MAIN_CLASS_NAME" value="co.edu.uniquindio.proyecto.ProductoTest" />
+      <option name="METHOD_NAME" value="obtenerPropietarioProductoTest" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="PersistenciaApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
-      <module name="persistencia" />
-      <option name="SPRING_BOOT_MAIN_CLASS" value="co.edu.uniquindio.proyecto.PersistenciaApplication" />
+    <configuration name="UsuarioServicioTest.eliminarUsuarioTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="negocio" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="co.edu.uniquindio.proyecto.*" />
+          <option name="PATTERN" value="co.edu.uniquindio.proyecto.test.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
+      <option name="PACKAGE_NAME" value="co.edu.uniquindio.proyecto.test" />
+      <option name="MAIN_CLASS_NAME" value="co.edu.uniquindio.proyecto.test.UsuarioServicioTest" />
+      <option name="METHOD_NAME" value="eliminarUsuarioTest" />
+      <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="JUnit.UsuarioServicioTest.listarUsuariosTest" />
         <item itemvalue="JUnit.ProductoServicioTest.publicarProducto" />
-        <item itemvalue="Spring Boot.PersistenciaApplication" />
+        <item itemvalue="JUnit.UsuarioServicioTest.eliminarUsuarioTest" />
+        <item itemvalue="JUnit.ProductoServicioTest.comentarProducto" />
+        <item itemvalue="JUnit.ProductoTest.obtenerPropietarioProductoTest" />
         <item itemvalue="JUnit.ProductoServicioTest.obtenerProductoTest" />
-        <item itemvalue="JUnit.UsuarioServicioTest.obtenerUsuarioTest" />
       </list>
     </recent_temporary>
   </component>
@@ -226,7 +234,8 @@
       <workItem from="1682057320626" duration="3495000" />
       <workItem from="1682083017364" duration="10000" />
       <workItem from="1682111614090" duration="26196000" />
-      <workItem from="1682465038807" duration="16071000" />
+      <workItem from="1682465038807" duration="24713000" />
+      <workItem from="1682528730217" duration="5157000" />
     </task>
     <servers />
   </component>
Index: persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Producto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto.entidades;\n\n\nimport lombok.*;\n\nimport javax.persistence.*;\nimport javax.validation.constraints.Future;\nimport javax.validation.constraints.NotBlank;\nimport javax.validation.constraints.Positive;\nimport javax.validation.constraints.PositiveOrZero;\nimport java.io.Serializable;\nimport java.time.LocalDate;\nimport java.util.Date;\nimport java.util.List;\n\n@Entity\n@EqualsAndHashCode(onlyExplicitlyIncluded = true)\n@Getter\n@Setter\n@NoArgsConstructor\n@ToString\npublic class Producto implements Serializable {\n\n    @Id\n    @EqualsAndHashCode.Include\n    private String codigo;\n\n    @NotBlank(message = \"El nombre del producto es obligatorio\")\n    @Column(nullable = false,length = 100)\n    private String nombre;\n\n    @NotBlank\n    @Column(nullable = false)\n    private String descripcion;\n\n    @Positive\n    @Column(nullable = false)\n    private float precio;\n\n    @Column(nullable = false)\n    private LocalDate fechaCreacion;\n\n    @Future\n    @Column(nullable = false)\n    private LocalDate fechaLimite;\n\n    @PositiveOrZero\n    @Column(nullable = false)\n    private Integer unidades;\n\n    @ToString.Exclude\n    @ManyToOne\n    private Usuario miUsuario;\n    //entidad propietaria\n\n\n    @ToString.Exclude\n    @OneToMany(mappedBy = \"miProducto\")\n    private List<Imagen> misImagens;\n\n    @ToString.Exclude\n    @ManyToOne\n    private Categoria miCategoria;\n\n\n\n    //datos que se necesitan para crear un producto\n    public Producto(String codigo, String nombre, String descripcion, float precio, LocalDate fechaCreacion, LocalDate fechaLimite, Integer unidades) {\n        this.codigo = codigo;\n        this.nombre = nombre;\n        this.descripcion = descripcion;\n        this.precio = precio;\n        this.fechaCreacion = fechaCreacion;\n        this.fechaLimite = fechaLimite;\n        this.unidades = unidades;\n    }\n\n    //entidad Propietaria es el producto porque para hacer un producto necesitamos una categoria\n\n    @ToString.Exclude\n    @OneToMany(mappedBy = \"miProducto\")\n    private List<Comentario> miComentario;\n\n    @ToString.Exclude\n    @OneToMany(mappedBy = \"miProducto\")\n    private List<DetalleCompra> misDetalleCompras;\n\n\n    @ToString.Exclude\n    @OneToMany(mappedBy = \"miProducto\")\n    private List<DetalleDeProducto> misDetalleProductos;\n\n    @ToString.Exclude\n    @OneToMany(mappedBy = \"miProducto\")\n    private List<ProductoModerador> misProductosModerador;\n\n\n    //estos son los usuarios que tienen el producto en favoritos\n    //entidad inversa entre usuario y producto\n    @ToString.Exclude\n    @ManyToMany(mappedBy = \"productosFavoritos\")\n    private List<Usuario> usuariosFavoritos;\n\n//se debe crear la relacion con el moderador\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Producto.java b/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Producto.java
--- a/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Producto.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Producto.java	(date 1682491730144)
@@ -4,10 +4,7 @@
 import lombok.*;
 
 import javax.persistence.*;
-import javax.validation.constraints.Future;
-import javax.validation.constraints.NotBlank;
-import javax.validation.constraints.Positive;
-import javax.validation.constraints.PositiveOrZero;
+import javax.validation.constraints.*;
 import java.io.Serializable;
 import java.time.LocalDate;
 import java.util.Date;
@@ -25,6 +22,7 @@
     @EqualsAndHashCode.Include
     private String codigo;
 
+
     @NotBlank(message = "El nombre del producto es obligatorio")
     @Column(nullable = false,length = 100)
     private String nombre;
Index: negocio/src/test/java/co/edu/uniquindio/proyecto/test/ProductoServicioTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto.test;\n\n\nimport co.edu.uniquindio.proyecto.NegocioApplication;\nimport co.edu.uniquindio.proyecto.entidades.Producto;\nimport co.edu.uniquindio.proyecto.entidades.Usuario;\nimport co.edu.uniquindio.proyecto.servicios.ProductoServicio;\nimport co.edu.uniquindio.proyecto.servicios.UsuarioServicio;\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\n\nimport javax.transaction.Transactional;\nimport java.time.LocalDate;\n\n\n@SpringBootTest(classes = NegocioApplication.class)\n@Transactional\npublic class ProductoServicioTest {\n\n    @Autowired\n    private ProductoServicio productoServicio;\n\n    @Autowired\n    private UsuarioServicio usuarioServicio;\n\n    @Test\n    public void obtenerProductoTest(){\n\n        try {\n            Usuario vendedor = usuarioServicio.obtenerUsuario(\"909\");\n            LocalDate ldn = LocalDate.now();\n            LocalDate ld = LocalDate.of(2020,1,8);\n            Producto producto = new Producto(\"2\",null,\"televisor smart tv\",400000,ldn,ld,null);\n            Producto publicado =productoServicio.publicarProducto(producto);\n\n           Assertions.assertNotNull(publicado);\n        } catch (Exception e) {\n           // throw new RuntimeException(e);\n            Assertions.assertTrue(false, e.getMessage());\n        }\n\n\n    }\n\n    @Test\n    public void publicarProducto(){\n\n\n        try {\n            LocalDate ldn = LocalDate.now();\n            LocalDate ld = LocalDate.of(2020,1,8);\n            Producto producto = new Producto(\"2\",null,\"televisor smart tv\",400000,ldn,ld,20);\n            System.out.println(producto);\n            Producto salida =productoServicio.publicarProducto(producto);\n            Assertions.assertNotNull(salida);\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/negocio/src/test/java/co/edu/uniquindio/proyecto/test/ProductoServicioTest.java b/negocio/src/test/java/co/edu/uniquindio/proyecto/test/ProductoServicioTest.java
--- a/negocio/src/test/java/co/edu/uniquindio/proyecto/test/ProductoServicioTest.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/negocio/src/test/java/co/edu/uniquindio/proyecto/test/ProductoServicioTest.java	(date 1682537030281)
@@ -13,6 +13,7 @@
 
 import javax.transaction.Transactional;
 import java.time.LocalDate;
+import java.util.Optional;
 
 
 @SpringBootTest(classes = NegocioApplication.class)
@@ -33,9 +34,9 @@
             LocalDate ldn = LocalDate.now();
             LocalDate ld = LocalDate.of(2020,1,8);
             Producto producto = new Producto("2",null,"televisor smart tv",400000,ldn,ld,null);
-            Producto publicado =productoServicio.publicarProducto(producto);
+           // Producto publicado =productoServicio.publicarProducto(producto);
 
-           Assertions.assertNotNull(publicado);
+          // Assertions.assertNotNull(publicado);
         } catch (Exception e) {
            // throw new RuntimeException(e);
             Assertions.assertTrue(false, e.getMessage());
@@ -46,17 +47,39 @@
 
     @Test
     public void publicarProducto(){
+        Usuario u = new Usuario("906","pedro","1023452133","mario@gmail.com","28#14-09","3216758976","unimario","Heropro.12");
 
+
+        LocalDate ldn = LocalDate.now();
+        LocalDate ld = LocalDate.of(2020,1,8);
+        Producto producto = new Producto("2","televisor","televisor smart tv",400000,ldn,ld,20);
 
         try {
-            LocalDate ldn = LocalDate.now();
-            LocalDate ld = LocalDate.of(2020,1,8);
-            Producto producto = new Producto("2",null,"televisor smart tv",400000,ldn,ld,20);
-            System.out.println(producto);
-            Producto salida =productoServicio.publicarProducto(producto);
-            Assertions.assertNotNull(salida);
+            usuarioServicio.registrarUsuario(u);
+            Producto salida =productoServicio.publicarProductoVender(producto,u);
+
+            Assertions.assertNotNull(salida);
+        } catch (Exception e) {
+            throw new RuntimeException(e);
+        }
+    }
+
+    @Test
+    public void comentarProductoTest(){
+
+        Usuario u = new Usuario("905","pedro","1023452133","mario@gmail.com","28#14-09","3216758976","unimario","Heropro.12");
+
+        LocalDate ldn = LocalDate.now();
+        LocalDate ld = LocalDate.of(2020,1,8);
+        Producto producto = new Producto("2","televisor","televisor smart tv",400000,ldn,ld,20);
+
+        try {
+            usuarioServicio.registrarUsuario(u);
+
+            productoServicio.comentarProducto("precio minimo",u , producto);
         } catch (Exception e) {
             throw new RuntimeException(e);
         }
+
     }
 }
Index: negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicio.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto.servicios;\n\nimport co.edu.uniquindio.proyecto.entidades.*;\n\nimport java.util.List;\n\npublic interface ProductoServicio {\n\n    Producto publicarProducto(Producto p) throws Exception;\n\n    void actualizarProducto(Producto p) throws Exception;\n\n    void eliminarProducto(String codigo) throws Exception;\n\n    Producto obtenerProducto(String codigo) throws Exception;\n    List<Producto> listarProductosPorCategoria(Categoria categoria);\n\n    void comentarProducto(String mensaje,Usuario usuario,Producto producto) throws Exception;\n\n    void guardarProductoEnFavoritos(Producto producto,Usuario usuario) throws Exception;\n    void eliminarProductofavorito(Producto producto,Usuario usuario)throws Exception;\n    void comprarProductos(DetalleCompra detalleCompra,Producto producto);\n\n     List<Producto> buscarProducto(String nombre, String [] producto);\n\n     List<Producto> listarProductos(String codigoUsuario)throws Exception;\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicio.java b/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicio.java
--- a/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicio.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/ProductoServicio.java	(date 1682536982440)
@@ -6,8 +6,10 @@
 
 public interface ProductoServicio {
 
-    Producto publicarProducto(Producto p) throws Exception;
+    Producto publicarProducto (Producto p) throws Exception;
+    Producto publicarProductoVender(Producto p,Usuario u) throws Exception;
 
+    Producto registrarProducto(Producto p) throws Exception;
     void actualizarProducto(Producto p) throws Exception;
 
     void eliminarProducto(String codigo) throws Exception;
@@ -26,4 +28,6 @@
      List<Producto> listarProductos(String codigoUsuario)throws Exception;
 
 
+
+
 }
Index: negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicio.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto.servicios;\n\nimport co.edu.uniquindio.proyecto.entidades.Usuario;\n\nimport java.util.List;\n\npublic interface UsuarioServicio {\n    Usuario registrarUsuario(Usuario u) throws Exception;\n    Usuario actualizarUsuario(Usuario u) throws Exception;\n\n    void eliminarUsuario(String codigo) throws Exception;\n    List<Usuario> listarUsuarios();\n\n    Usuario iniciarSesion(String username,String password) throws Exception;\n\n    Usuario obtenerUsuario(String codigo) throws Exception;\n\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicio.java b/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicio.java
--- a/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicio.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicio.java	(date 1682494483600)
@@ -15,6 +15,9 @@
 
     Usuario obtenerUsuario(String codigo) throws Exception;
 
+    Usuario obtenerPropietarioProducto(String codigoProducto);
+
+
 
 
 
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\nhttps://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <packaging>pom</packaging>\n    <modules>\n        <module>persistencia</module>\n        <module>negocio</module>\n    </modules>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.7.3</version>\n        <relativePath/>\n    </parent>\n\n    <groupId>co.edu.uniquindio</groupId>\n    <artifactId>proyecto-padre</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>Proyecto Padre</name>\n    <description>Proyecto que agrupa todos los módulos correspondientes al  aplicativo</description>\n\n    <properties>\n        <java.version>11</java.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n        </dependency>\n    </dependencies>\n\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/pom.xml	(date 1682492056067)
@@ -36,6 +36,7 @@
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-test</artifactId>
         </dependency>
+
     </dependencies>
 
 </project>
\ No newline at end of file
Index: negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicioImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto.servicios;\n\nimport co.edu.uniquindio.proyecto.entidades.Usuario;\nimport co.edu.uniquindio.proyecto.repositorios.UsuarioRepo;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.Optional;\n\n@Service\npublic class UsuarioServicioImpl implements UsuarioServicio{\n    private final UsuarioRepo usuarioRepo;\n\n    public UsuarioServicioImpl(UsuarioRepo usuarioRepo) {\n        this.usuarioRepo = usuarioRepo;\n    }\n\n    @Override\n    public Usuario registrarUsuario(Usuario u) throws Exception {\n\n        Optional<Usuario> buscado= usuarioRepo.findById(u.getCodigo());\n        if (buscado.isPresent()){\n            throw new Exception(\"El codigo del usuario ya existe\");\n        }\n\n        buscado= usuarioRepo.findByCedula(u.getCedula());\n        if (buscado.isPresent()){\n            throw new Exception(\"La cedula del usuario ya existe\");\n        }\n        buscado=usuarioRepo.findByEmail(u.getEmail());\n        if (buscado.isPresent()){\n            throw new Exception(\"El email del usuario ya existe\");\n        }\n\n        buscado=usuarioRepo.findByUsername(u.getUsername());\n        if (buscado.isPresent()){\n            throw new Exception(\"El username del usuario ya existe\");\n        }\n        return usuarioRepo.save(u);\n    }\n\n    @Override\n    public Usuario actualizarUsuario(Usuario u) throws Exception {\n        Optional<Usuario> buscado;\n\n\n        buscado=usuarioRepo.findByEmail(u.getEmail());\n        if (buscado.isPresent()){\n            throw new Exception(\"El email del usuario ya existe\");\n        }\n\n        buscado=usuarioRepo.findByUsername(u.getUsername());\n        if (buscado.isPresent()){\n            throw new Exception(\"El username del usuario ya existe\");\n        }\n        return usuarioRepo.save(u);\n    }\n\n\n\n    @Override\n    public void eliminarUsuario(String codigo) throws Exception {\n\n        Optional<Usuario> buscado= usuarioRepo.findById(codigo);\n        if (buscado.isEmpty()){\n            throw new Exception(\"El codigo del usuario No existe\");\n        }\n\n          usuarioRepo.deleteById(codigo);\n    }\n\n    private Optional<Usuario> buscarUsuarioPorEmail(String email){\n        return  usuarioRepo.findByEmail(email);\n\n    }\n\n    @Override\n    public List<Usuario> listarUsuarios() {\n        return usuarioRepo.findAll();\n    }\n\n    @Override\n    public Usuario iniciarSesion(String username, String password) throws Exception {\n    return      usuarioRepo.findByUsernameAndPassword(username,password).orElseThrow(() -> new Exception (\"los datos de autenticacion son incorrectos\"));\n\n\n    }\n\n    @Override\n    public Usuario obtenerUsuario(String codigo) {\n        return usuarioRepo.obtenerUsuarioPorCodigo(codigo);\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicioImpl.java b/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicioImpl.java
--- a/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicioImpl.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/negocio/src/main/java/co/edu/uniquindio/proyecto/servicios/UsuarioServicioImpl.java	(date 1682494483612)
@@ -91,5 +91,10 @@
         return usuarioRepo.obtenerUsuarioPorCodigo(codigo);
     }
 
+    @Override
+    public Usuario obtenerPropietarioProducto(String codigoProducto) {
+        return null;
+    }
+
 
 }
Index: persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/ComentarioRepo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/ComentarioRepo.java b/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/ComentarioRepo.java
new file mode 100644
--- /dev/null	(date 1682496394282)
+++ b/persistencia/src/main/java/co/edu/uniquindio/proyecto/repositorios/ComentarioRepo.java	(date 1682496394282)
@@ -0,0 +1,12 @@
+package co.edu.uniquindio.proyecto.repositorios;
+
+import co.edu.uniquindio.proyecto.entidades.Comentario;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+@Repository
+public interface ComentarioRepo extends JpaRepository<Comentario,String> {
+
+
+
+}
Index: persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Comentario.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto.entidades;\n\nimport lombok.*;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.ManyToOne;\nimport java.io.Serializable;\nimport java.time.LocalDate;\nimport java.util.Date;\n\n@Entity\n@Getter\n@Setter\n@NoArgsConstructor\n@EqualsAndHashCode(onlyExplicitlyIncluded = true)\n@ToString\npublic class Comentario implements Serializable {\n    @Id\n    @Column(length = 10)\n    @EqualsAndHashCode.Include\n    private String codigo;\n\n    @Column(length = 150,nullable = false)\n    private String mensaje;\n\n\n    @Column(nullable = false,columnDefinition =\"TIMESTAMP DEFAULT CURRENT_TIMESTAMP\")\n    private LocalDate fechaCreacion;\n\n    @ToString.Exclude\n    @ManyToOne\n    private Producto miProducto;\n    //entidad propietaria\n\n    @ToString.Exclude\n    @ManyToOne\n    private Usuario miUsuario;\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Comentario.java b/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Comentario.java
--- a/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Comentario.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Comentario.java	(date 1682496483727)
@@ -29,6 +29,13 @@
     @Column(nullable = false,columnDefinition ="TIMESTAMP DEFAULT CURRENT_TIMESTAMP")
     private LocalDate fechaCreacion;
 
+
+    public Comentario(String codigo, String mensaje, LocalDate fechaCreacion) {
+        this.codigo = codigo;
+        this.mensaje = mensaje;
+        this.fechaCreacion = fechaCreacion;
+    }
+
     @ToString.Exclude
     @ManyToOne
     private Producto miProducto;
Index: persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Persona.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package co.edu.uniquindio.proyecto.entidades;\n\n\nimport lombok.*;\nimport org.hibernate.validator.constraints.Length;\n\nimport javax.persistence.*;\nimport javax.validation.constraints.Email;\nimport java.io.Serializable;\n\n@Getter\n@Setter\n@NoArgsConstructor\n@EqualsAndHashCode(onlyExplicitlyIncluded = true)\n@Inheritance(strategy=InheritanceType.TABLE_PER_CLASS)\n@MappedSuperclass\n@ToString\n@AllArgsConstructor\npublic class Persona implements Serializable  {\n    @Id\n    @EqualsAndHashCode.Include\n    @Column(length = 10)\n    private String codigo;\n\n    @Column(nullable = false,length = 100)\n    @Length(max = 150)\n    private String nombre;\n\n    @Column(nullable = false,length = 150,unique = true)\n    private String cedula;\n\n\n    @Column(nullable = false,length = 150,unique = true)\n    @Email\n    private String email;\n\n    //@Column(nullable = false,length = 20)\n    //private String password;\n\n    @Column(nullable = false,length = 150)\n    private String direccion;\n\n\n    @Column(length = 20)\n    private String telefono;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Persona.java b/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Persona.java
--- a/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Persona.java	(revision 06d769c59b165c6c733a76052b1cffa01446181c)
+++ b/persistencia/src/main/java/co/edu/uniquindio/proyecto/entidades/Persona.java	(date 1682491500670)
@@ -6,6 +6,8 @@
 
 import javax.persistence.*;
 import javax.validation.constraints.Email;
+import javax.validation.constraints.NotBlank;
+import javax.validation.constraints.NotNull;
 import java.io.Serializable;
 
 @Getter
@@ -22,6 +24,7 @@
     @Column(length = 10)
     private String codigo;
 
+
     @Column(nullable = false,length = 100)
     @Length(max = 150)
     private String nombre;
